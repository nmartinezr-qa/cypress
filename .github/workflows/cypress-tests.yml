name: Cypress Tests

# Define cuándo se ejecutará el workflow
on:
  push:
    branches:
      - master  # Cambia 'main' por la rama que desees monitorear
  pull_request:
    branches:
      - master

# Define los jobs (tareas) que se ejecutarán
jobs:
  cypress-run:
    runs-on: ubuntu-latest  # Usa una máquina virtual con Ubuntu

    steps:
      # Paso 1: Clona el repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Configura Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Cambia la versión según tu proyecto

      # Paso 3: Cachea las dependencias y el binario de Cypress
      - name: Cache dependencies and Cypress binary
        uses: actions/cache@v4
        with:
            path: |
              node_modules
              ~/.cache/Cypress
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-

      # Paso 4: Instala dependencias
      - name: Install dependencies
        run: npm install

      - name: Install Cypress binary if missing
        run: npx cypress install

      # Paso 5: Asegúrate de que los scripts de Cypress sean ejecutables (permisos)
      - name: Fix permissions
        run: chmod -R +x ./node_modules/.bin

      # Paso 6: Ejecuta las pruebas de Cypress
      - name: Run Cypress tests
        run: npx cypress run --headless --browser chrome

      # Paso 7: Sube los reportes como artefactos (opcional)
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: cypress-reports
          path: cypress/reports
