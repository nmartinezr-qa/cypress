{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-02-12T18:06:25.306Z",
    "end": "2025-02-12T18:06:33.049Z",
    "duration": 7743,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "896e08c8-fa50-4011-85ae-45577e3fddc2",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\Test1.js",
      "file": "cypress\\integration\\examples\\Test1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "528ae285-9472-42b5-9bed-ed81fbe2db76",
          "title": "My First Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visits the Cypress documentation page",
              "fullTitle": "My First Test Visits the Cypress documentation page",
              "timedOut": null,
              "duration": 5772,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/')\ncy.get('.search-keyword').type('ca')\ncy.wait(1000)\n// selenium get hit url in browser, cypress get acts like findElement of selenium\n// get() will get the element and then we can perform actions on it\ncy.get('.product').should('have.length', 5)\n// Select onlyu visible products\ncy.get('.product:visible').should('have.length', 4)\n// Selects parent element then find child element and finally validate the number of elements\ncy.get('.products').find('.product').should('have.length', 4)\n// Find the element with text 'ADD TO CART' and click on it\ncy.get('.products').find('.product').eq(1).contains('ADD TO CART').click()      \ncy.get('.products').find('.product').each(($el, index, $list) => {\n    const vegName = $el.find('h4.product-name').text()\n    if(vegName.includes('Cashews')){\n        // Click on the button of the element\n        // Wrap is used to resolve the promise and then click on the button\n        cy.wrap($el).find('button').click()\n    }\n})\n// The following line fails because cypress is returning a promise and not the actual value\n//const logo = cy.get('.brand')\n// To resolve the promise and get the actual value we use then() function\ncy.get('.brand').then((logoElement) => {\n    cy.log(logoElement.text())\n})\n// Validate the text of the logo\ncy.get('.brand').should('have.text', 'GREENKART')",
              "err": {},
              "uuid": "e1ca9766-46d3-40a5-97eb-524028f16643",
              "parentUUID": "528ae285-9472-42b5-9bed-ed81fbe2db76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1ca9766-46d3-40a5-97eb-524028f16643"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "charts": true,
        "reportPageTitle": "Resultados de Pruebas Cypress",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}