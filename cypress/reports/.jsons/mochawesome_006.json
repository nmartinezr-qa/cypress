{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-02-12T18:06:42.001Z",
    "end": "2025-02-12T18:06:52.319Z",
    "duration": 10318,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a320526d-8159-4958-b052-5a71a1ee7bdc",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\Test3.js",
      "file": "cypress\\integration\\examples\\Test3.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d1cf8eac-c0d0-49b4-aef9-34db2da566fe",
          "title": "My Second Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visits the Cypress documentation page",
              "fullTitle": "My Second Test Visits the Cypress documentation page",
              "timedOut": null,
              "duration": 8566,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/AutomationPractice/#/')\n// Check the checkbox\ncy.get('#checkBoxOption1').check().should('be.checked').and('have.value', 'option1')\n// Uncheck the checkbox\ncy.get('#checkBoxOption1').uncheck().should('not.be.checked')\n// Check multiple checkboxes using value\ncy.get('input[type=\"checkbox\"]').check(['option2', 'option3']).should('be.checked')\n//Uncheck multiple checkboxes\ncy.get('input[type=\"checkbox\"]').uncheck(['option2', 'option3']).should('not.be.checked')\n//Check all the checkboxes\ncy.get('input[type=\"checkbox\"]').check().should('be.checked')\n\n// Select the value from a static dropdown\ncy.get('select').select('option2').should('have.value', 'option2')\n\n// Select the value from a dynamic dropdown\ncy.get('#autocomplete').type('ind')\ncy.get('.ui-menu-item div').each(($el, index, $list) => {\n    if($el.text() === 'India'){\n        cy.wrap($el).click()\n    }\n})\n// Validate the selected value\ncy.get('#autocomplete').should('have.value', 'India')\n\n// Make an element invisible and validate if it is invisible\ncy.get('#hide-textbox').click()\ncy.get('#displayed-text').should('not.be.visible')\n// Make an element visible and validate if it is visible\ncy.get('#show-textbox').click()\ncy.get('#displayed-text').should('be.visible')\n// Select Radio button\ncy.get('input[value=\"radio2\"]').check().should('be.checked')\n\n// Alerts and confirmations\ncy.get('#alertbtn').click().then(() => {\n    cy.on('window:alert', (str) => {\n        expect(str).to.equal('Hello , share this practice page and share your knowledge')\n    })\n})\n// Confirmations\ncy.get('#confirmbtn').click().then(() => {\n    cy.on('window:confirm', (str) => {\n        expect(str).to.equal('Hello , Are you sure you want to confirm?')\n    })\n})\n// Cancel the confirmation\ncy.get('#confirmbtn').click().then(() => {\n    cy.on('window:Cancel', (str) => {\n        return true\n    })\n})",
              "err": {},
              "uuid": "5662c537-7ca7-42ae-8802-dfae05213de6",
              "parentUUID": "d1cf8eac-c0d0-49b4-aef9-34db2da566fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5662c537-7ca7-42ae-8802-dfae05213de6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "charts": true,
        "reportPageTitle": "Resultados de Pruebas Cypress",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}